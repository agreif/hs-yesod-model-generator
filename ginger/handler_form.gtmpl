{% include 'macros.gtmpl' -%}

{% if _formType == 'Add' -%}
{% set _formArgs = model.addFormArgs -%}
{% elif _formType == 'Edit' -%}
{% set _formArgs = model.editFormArgs -%}
{% else -%}
{% set _formArgs = model.formArgs -%}
{% endif -%}

v{{_formType}}{{model.nameCap}}Form :: {% if _formType == 'Add' || _formType == 'Edit' %} Maybe {{model.nameCap}}Id -> {% endif %} Maybe {{model.nameCap}} -> {% for arg in _formArgs %} {{arg.type}} ->{% endfor %} Html -> MForm Handler (FormResult V{{_formType}}{{model.nameCap}}, Widget)
v{{_formType}}{{model.nameCap}}Form {% if _formType == 'Add' || _formType == 'Edit' %} maybe{{model.nameCap}}Id {% endif %} maybe{{model.nameCap}} {% for arg in _formArgs %} {{arg.name}} {% endfor %} extra = do
  {%- for field in _fields %}

  {%- if _formType == 'Add' %}
  {%- set _view = field.addView %}
  {%- elif _formType == 'Edit' %}
  {%- set _view = field.editView %}
  {%- else %}
  {%- set _view = field.view %}
  {%- endif %}

  {%- if _view %}
  ({{field.name}}Result, {{field.name}}View) <- {{_view.isRequired ? 'mreq' : 'mopt'}}{{' '}}
      {%- if field.belongsTo %}
        {{- '(' ~ field.formFieldType ~ ' ' ~ field.name ~ 'Options)' }}
      {%- else %}
        {{- field.formFieldType }}
      {%- endif %}
    {{field.name}}Fs
    {% if _view.default == null -%}
      ({{_view.isOptional && field.db.isNotNullable ? 'Just $ ' : ''}}{{model.name}}{{field.nameCap}} <$> maybe{{model.nameCap}})
    {%- else -%}
      ({{ _view.default }})
    {%- endif -%}
  {%- endif -%}
  {%- endfor %}
  {%- if _formType == 'Edit' %}
  (versionResult, versionView) <- mreq hiddenField
    versionFs
    ({{model.name}}Version <$> maybe{{model.nameCap}})
  {%- endif %}
  let v{{_formType}}{{model.nameCap}}Result = V{{_formType}}{{model.nameCap}}
    {%- for field in _fields %}

    {%- if _formType == 'Add' %}
    {%- set _view = field.addView %}
    {%- elif _formType == 'Edit' %}
    {%- set _view = field.editView %}
    {%- else %}
    {%- set _view = field.view %}
    {%- endif %}

    {%- if _view -%}
        {{loop.first ? ' <$> ' : ' <*> '}}{{field.name}}Result
    {%- endif -%}
    {%- endfor -%}
    {%- if _formType == 'Edit' -%}
    {{' '}}<*> versionResult
    {%- endif %}
  let formWidget = toWidget [whamlet|
    #{extra}
    {%- if _formType == 'Edit' %}
    ^{fvInput versionView}
    {%- endif %}
    {%- for field in _fields %}


    {%- if _formType == 'Add' %}
    {%- set _view = field.addView %}
    {%- elif _formType == 'Edit' %}
    {%- set _view = field.editView %}
    {%- else %}
    {%- set _view = field.view %}
    {%- endif %}

    {%- if _view %}
    <div #{{field.name}}InputWidget .uk-margin-small :not $ null $ fvErrors {{field.name}}View:.uk-form-danger>
      <label #{{field.name}}InputLabel .uk-form-label :not $ null $ fvErrors {{field.name}}View:.uk-text-danger for=#{fvId {{field.name}}View}>#{fvLabel {{field.name}}View}
      <div .uk-form-controls>
        ^{fvInput {{field.name}}View}
        <span #{{field.name}}InputInfo .uk-margin-left>
          {{'_{Msg' ~ model.nameCap ~ field.nameCap ~ 'InputInfo}'}}
        <span #{{field.name}}InputError>
          $maybe err <- fvErrors {{field.name}}View
            &nbsp;#{err}
    {%- endif -%}
    {%- endfor %}
    |]
  return (v{{_formType}}{{model.nameCap}}Result, formWidget)
  where
    {%- for field in model.belongsToFields -%}
      {{ field.name ~ 'Options = optionsPersistKey [] [Asc ' ~ field.belongsTo.modelCap ~ field.belongsTo.sortFieldCap ~ '] ' ~ field.belongsTo.model ~ field.belongsTo.dispFieldCap }}
    {% endfor -%}
    {%- for field in _fields %}

    {%- if _formType == 'Add' %}
    {%- set _view = field.addView %}
    {%- elif _formType == 'Edit' %}
    {%- set _view = field.editView %}
    {%- else %}
    {%- set _view = field.view %}
    {%- endif %}

    {%- if _view %}
    {{field.name}}Fs :: FieldSettings App
    {{field.name}}Fs = FieldSettings
      { fsLabel = SomeMessage {{'Msg' ~ model.nameCap ~ field.nameCap}}
      , fsTooltip = Nothing
      , fsId = Just "{{field.name}}"
      , fsName = Just "{{field.name}}"
      , fsAttrs = [ {% for attr in _view.attrs -%}
                  {{concat("(\"", attr.key, "\",", "\"", attr.value, "\")")|prefixCommaUnlessLoopFirst}}
                  {%- endfor %} ]
      }
    {%- endif -%}
    {%- endfor %}
    {%- if _formType == 'Edit' %}
    versionFs :: FieldSettings App
    versionFs = FieldSettings
      { fsLabel = ""
      , fsTooltip = Nothing
      , fsId = Just "version"
      , fsName = Just "version"
      , fsAttrs = []
      }
    {%- endif %}

{{- '' -}}
